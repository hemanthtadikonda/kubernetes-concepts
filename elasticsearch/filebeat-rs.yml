---
apiVersion: v1
kind: ConfigMap
metadata:
   name: filebeat-config
   labels:
      k8s-app: filebeat
data:
   filebeat.yml: |-
      filebeat.autodiscover:
        providers:
          - type: kubernetes
            host: ${NODE_NAME}
            hints.enabled: true
            hints.default_config:
               type: container
               paths:
                  - /var/log/containers/*-${data.container.id}.log
      
      setup.template.enabled: true
      setup.template.name: "rs"
      setup.template.pattern: "rs"
      setup.ilm.enabled: false   
      processors:
         - add_cloud_metadata: 
         - add_host_metadata:
      
      output.elasticsearch:
         hosts: ["https://${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200"]
         index: "rs-%{[kubernetes.namespace]:noindex}-%{[kubernetes.container.name]}-%{+yyyy.MM.dd}"
         username: ${ELASTICSEARCH_USERNAME}
         password: ${ELASTICSEARCH_PASSWORD}      
         ssl.certificate_authorities:
            -  /mnt/elastic/tls.crt

---
apiVersion: apps/v1
kind: DaemonSet
metadata:
   name: filebeat
   labels:
      k8s-app: filebeat
spec:
   selector:
      matchLabels:
         k8s-app: filebeat
   template:
      metadata:
         labels:
            k8s-app: filebeat
      spec:
         containers:
            - name: filebeat
              image: docker.elastic.co/beats/filebeat:8.0.0
              arg: [
                 "-c" , "/etc/filebeat.yml" ,
                 "-e" ,
              ]
              env:
                 -  name: ELASTICSEARCH_HOST
                    value: quickstart-es-http
                 -  name: ELASTICSEARCH_PORT
                    value: "9200"
                 -  name: ELASTICSEARCH_USERNAME
                    value: elastic
                 -  name: ELASTICSEARCH_PASSWORD
                    valueFrom:
                       secretKeyRef:
                          key: elastic
                          name: quickstart-es-elastic-user
                 -  name: NODE_NAME
                    valueFrom:
                       fieldRef:
                          fieldPath: spec.nodeName
              securityContext:
                 runAsUser: 0
              resources:
                 limits:
                    memory: 200Mi
                 requests:
                    memory: 100Mi
                    cpu: 100m
              volumeMounts:
                 -   name: config
                     mountPath: /etc/filebeat.yml
                     readOnly: true
                     subPath: filebeat.yml
                 -   name: data
                     mountPath: /usr/share/filebeat/data
                 -   name: varlibdockercontainers
                     mountPath: /var/lib/docker/containers
                     readOnly: true
                 -   name: varlog
                     mountPath: /var/log
                     readOnly: true
                 -   name: es-certs
                     mountPath: /mnt/elastic/tls.crt
                     readOnly: true
                     subPath: tls.crt
         volumes:
            -  name: config
               configMap:
                  defaultMode: 0600
                  name: filebeat-config
            -  name: varlibdockercontainers
               hostPath:
                  path: /var/lib/docker/containers
            -  name: varlog
               hostPath:
                  path: /var/log
            # data folder stores a registry of read status for all files, so we don't send everything agian on a pod restart
            -  name: data
               hostPath:
                  path: /var/lib/filebeat-data
                  type: DirectoryOrCreate
            -  name: es-certs
               secret:
                  secretName: quickstart-es-http-certs-public
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
   name: filebeat
subjects:
   - kind: ServiceAccount
     name: filebeat
     namespace: default
roleRef:
   kind: ClusterRole
   name: filebeat
   apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
   name: filebeat
   labels:
      k8s-app: filebeat
rules:
   - apiGroups: [""]
     resources:
        -   namespaces
        -   pods
     verbs:
        -   get
        -   watch
        -   list
---
apiVersion: v1
kind: ServiceAccount
metadata:
   name: filebeat
   namespace: default
   labels:
      k8s-app: filebeat












